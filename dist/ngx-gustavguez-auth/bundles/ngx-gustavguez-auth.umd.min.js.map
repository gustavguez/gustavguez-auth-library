{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-gustavguez-auth/lib/ngx-gustavguez-access-token.model.ts","ng://ngx-gustavguez-auth/lib/ngx-gustavguez-last-me.model.ts","ng://ngx-gustavguez-auth/lib/ngx-gustavguez-me.model.ts","ng://ngx-gustavguez-auth/lib/ngx-gustavguez-config.model.ts","ng://ngx-gustavguez-auth/lib/ngx-gustavguez-auth.service.ts","ng://ngx-gustavguez-auth/lib/ngx-gustavguez-auth.guard.ts","ng://ngx-gustavguez-auth/lib/ngx-gustavguez-auth.interceptor.ts","ng://ngx-gustavguez-auth/lib/ngx-gustavguez-auth-login/ngx-gustavguez-auth-login.component.ts","ng://ngx-gustavguez-auth/lib/ngx-gustavguez-auth.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","token","refreshToken","expiration","this","username","avatar","NgxGustavguezMeModel","id","firstName","lastName","profileImage","data","prototype","fromJSON","json","grantType","grantTypeRefresh","clientId","clientSecret","accessTokenLsKey","lastMeAvatarLsKey","lastMeUsernameLsKey","oauthUri","oauthRefreshUri","oauthMeUri","NgxGustavguezAuthService","storageService","apiService","onSessionStateChange","EventEmitter","onMeChanged","onMeParsed","config","NgxGustavguezConfigModel","setConfig","getLastMe","lastMe","getAccessToken","accessToken","getMe","me","isLogged","getOnSessionStateChange","getOnMeChanged","getOnMeParsed","login","loginUsername","loginPassword","_this","Observable","observer","changeApiResponseStrategy","createObj","password","grant_type","client_id","client_secret","pipe","map","response","set","parseAccessToken","subscribe","setAccessToken","requestMe","checkAndNotifyMeState","restoreApiResponseStrategy","next","complete","error","fetchData","emit","NgxGustavguezLastMeModel","NgxGustavguezAccessTokenModel","refresh_token","loadSession","accessTokenLs","get","lastMeAvatar","lastMeUsername","completeObservable","result","logout","remove","updateMe","access_token","Date","expiresIn","expires_in","setMinutes","getMinutes","LocalStorageService","ApiService","Injectable","providedIn","NgxGustavguezAuthGuard","ngxGustavguezAuthService","canActivate","NgxGustavguezAuthInterceptor","isRefreshingToken","tokenSubject","BehaviorSubject","intercept","req","handle","catchError","HttpErrorResponse","status","handle400Error","handle401Error","handle403Error","throwError","addToken","clone","setHeaders","Authorization","message","url","includes","filter","take","switchMap","newToken","errorCatched","finalize","NgxGustavguezAuthLoginComponent","fb","onSuccess","onError","ngOnInit","loading","lastAvatar","imageUrl","lastUsername","form","group","control","Validators","required","initForm","onSubmit","valid","value","FormUtility","validateAllFormFields","onUsernameChange","reset","patchValue","FormBuilder","Input","Output","Component","selector","template","NgxGustavguezAuthModule","NgModule","declarations","imports","CommonModule","LocalStorageModule","ReactiveFormsModule","NgxGustavguezCoreModule","providers","provide","HTTP_INTERCEPTORS","useClass","multi","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export class NgxGustavguezAccessTokenModel {\n\n\tconstructor(\n\t\tpublic token: string,\n\t\tpublic refreshToken: string,\n\t\tpublic expiration: Date) {\n\t}\n}\n","export class NgxGustavguezLastMeModel {\n\n\tconstructor(\n\t\tpublic username?: string,\n\t\tpublic avatar?: string\n\t) { }\n}\n","export class NgxGustavguezMeModel {\n\n\tconstructor(\n\t\tpublic id?: number,\n\t\tpublic username?: string,\n\t\tpublic firstName?: string,\n\t\tpublic lastName?: string,\n\t\tpublic profileImage?: string,\n\t\tpublic data?: any\n\t) { }\n\n\tpublic fromJSON(json: any): void {\n\t\tif (json) {\n\t\t\tthis.id = json.id;\n\t\t\tthis.username = json.username;\n\t\t\tthis.firstName = json.firstName;\n\t\t\tthis.lastName = json.lastName;\n\t\t\tthis.profileImage = json.profileImage;\n\t\t}\n\t}\n}\n","export class NgxGustavguezConfigModel {\n\n\tconstructor(\n\t\tpublic grantType?: string,\n\t\tpublic grantTypeRefresh?: string,\n\t\tpublic clientId?: string,\n\t\tpublic clientSecret?: string,\n\t\tpublic accessTokenLsKey?: string,\n\t\tpublic lastMeAvatarLsKey?: string,\n\t\tpublic lastMeUsernameLsKey?: string,\n\t\tpublic oauthUri?: string,\n\t\tpublic oauthRefreshUri?: string,\n\t\tpublic oauthMeUri?: string\n\t) { }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { LocalStorageService } from 'angular-2-local-storage';\nimport { ApiService, ApiResponseModel } from 'ngx-gustavguez-core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { NgxGustavguezConfigModel } from './ngx-gustavguez-config.model';\nimport { NgxGustavguezAccessTokenModel } from './ngx-gustavguez-access-token.model';\nimport { NgxGustavguezLastMeModel } from './ngx-gustavguez-last-me.model';\nimport { NgxGustavguezMeModel } from './ngx-gustavguez-me.model';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class NgxGustavguezAuthService {\n\n\t// Models\n\tprivate me: NgxGustavguezMeModel;\n\tprivate config: NgxGustavguezConfigModel;\n\tprivate lastMe: NgxGustavguezLastMeModel;\n\tprivate accessToken: NgxGustavguezAccessTokenModel;\n\n\t// User session events emitters\n\tprivate onSessionStateChange: EventEmitter<boolean>;\n\tprivate onMeParsed: EventEmitter<any>;\n\tprivate onMeChanged: EventEmitter<NgxGustavguezMeModel>;\n\n\t// Service constructure\n\tconstructor(\n\t\tprivate storageService: LocalStorageService,\n\t\tprivate apiService: ApiService) {\n\t\t// Create event emitters\n\t\tthis.onSessionStateChange = new EventEmitter<boolean>();\n\t\tthis.onMeChanged = new EventEmitter<NgxGustavguezMeModel>();\n\t\tthis.onMeParsed = new EventEmitter<any>();\n\n\t\t// Default values\n\t\tthis.config = new NgxGustavguezConfigModel();\n\t}\n\n\t// Methods\n\tpublic setConfig(config: NgxGustavguezConfigModel): void {\n\t\tthis.config = config;\n\t}\n\n\tpublic getLastMe(): NgxGustavguezLastMeModel {\n\t\treturn this.lastMe;\n\t}\n\n\tpublic getAccessToken(): NgxGustavguezAccessTokenModel {\n\t\treturn this.accessToken;\n\t}\n\n\tpublic getMe(): NgxGustavguezMeModel {\n\t\treturn this.me;\n\t}\n\n\tpublic isLogged(): boolean {\n\t\treturn !!this.me;\n\t}\n\n\tpublic getOnSessionStateChange(): Observable<boolean> {\n\t\treturn this.onSessionStateChange;\n\t}\n\n\tpublic getOnMeChanged(): Observable<NgxGustavguezMeModel> {\n\t\treturn this.onMeChanged;\n\t}\n\n\tpublic getOnMeParsed(): Observable<any> {\n\t\treturn this.onMeParsed;\n\t}\n\n\t// Generate a access token\n\tpublic login(loginUsername: string, loginPassword: string): Observable<boolean> {\n\t\t// Create an observable\n\t\tconst obs = new Observable<boolean>((observer: any) => {\n\t\t\t// Set root strategy\n\t\t\tthis.apiService.changeApiResponseStrategy('root');\n\n\t\t\t// Request token\n\t\t\tthis.apiService.createObj(this.config.oauthUri, {\n\t\t\t\tusername: loginUsername,\n\t\t\t\tpassword: loginPassword,\n\t\t\t\tgrant_type: this.config.grantType,\n\t\t\t\tclient_id: this.config.clientId,\n\t\t\t\tclient_secret: this.config.clientSecret\n\t\t\t}).pipe(\n\t\t\t\tmap((response: ApiResponseModel) => {\n\t\t\t\t\t// Save token to Local storage\n\t\t\t\t\tif (response.data) {\n\t\t\t\t\t\tthis.storageService.set(this.config.accessTokenLsKey, response.data);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Creates the access token model\n\t\t\t\t\treturn this.parseAccessToken(response.data);\n\t\t\t\t})\n\t\t\t).subscribe((response: NgxGustavguezAccessTokenModel) => {\n\t\t\t\t// Load accesstoken\n\t\t\t\tthis.accessToken = response;\n\n\t\t\t\t// Load to apiService to\n\t\t\t\tthis.apiService.setAccessToken(this.accessToken.token);\n\n\t\t\t\t// Check meUrl\n\t\t\t\tif (this.config.oauthMeUri) {\n\t\t\t\t\t// Request me info\n\t\t\t\t\tthis.requestMe().subscribe(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t// Notify user state\n\t\t\t\t\t\t\tthis.checkAndNotifyMeState();\n\n\t\t\t\t\t\t\t// Restore\n\t\t\t\t\t\t\tthis.apiService.restoreApiResponseStrategy();\n\n\t\t\t\t\t\t\t// Load response\n\t\t\t\t\t\t\tobserver.next(true);\n\t\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t// Rise error\n\t\t\t\t\t\t\tobserver.error(response);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// Restore\n\t\t\t\t\tthis.apiService.restoreApiResponseStrategy();\n\n\t\t\t\t\t// Complete subscribe\n\t\t\t\t\tobserver.next(true);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t}\n\t\t\t}, (response: HttpErrorResponse) => {\n\t\t\t\t// Rise error\n\t\t\t\tobserver.error(response);\n\t\t\t});\n\t\t});\n\t\treturn obs;\n\t}\n\n\t// Generate a access token\n\tpublic requestMe(): Observable<NgxGustavguezMeModel> {\n\t\t// Set root strategy\n\t\tthis.apiService.changeApiResponseStrategy('data');\n\n\t\t// Do request\n\t\treturn this.apiService.fetchData(this.config.oauthMeUri).pipe(\n\t\t\tmap((response: ApiResponseModel) => {\n\t\t\t\t// Load userLogged\n\t\t\t\tthis.me = new NgxGustavguezMeModel();\n\t\t\t\tthis.me.fromJSON(response.data.me);\n\n\t\t\t\t// Emit parsed and changed\n\t\t\t\tthis.onMeParsed.emit(response.data);\n\t\t\t\tthis.onMeChanged.emit(this.me);\n\n\t\t\t\t// Load user logged\n\t\t\t\tthis.lastMe = new NgxGustavguezLastMeModel();\n\t\t\t\tthis.lastMe.avatar = this.me.profileImage;\n\t\t\t\tthis.lastMe.username = this.me.username;\n\n\t\t\t\t// Save to LS\n\t\t\t\tthis.storageService.set(this.config.lastMeAvatarLsKey, this.me.profileImage);\n\t\t\t\tthis.storageService.set(this.config.lastMeUsernameLsKey, this.me.username);\n\n\t\t\t\t// Restore\n\t\t\t\tthis.apiService.restoreApiResponseStrategy();\n\t\t\t\treturn this.me;\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic refreshToken(): Observable<NgxGustavguezAccessTokenModel> {\n\t\t// Get refresh token\n\t\tconst refreshToken: string = this.accessToken instanceof NgxGustavguezAccessTokenModel ? this.accessToken.refreshToken : '';\n\n\t\t// Set root strategy\n\t\tthis.apiService.changeApiResponseStrategy('root');\n\n\t\t// Request token\n\t\treturn this.apiService.createObj(this.config.oauthUri, {\n\t\t\trefresh_token: refreshToken,\n\t\t\tgrant_type: this.config.grantTypeRefresh,\n\t\t\tclient_id: this.config.clientId\n\t\t}).pipe(\n\t\t\tmap((response: ApiResponseModel) => {\n\t\t\t\t// Check response\n\t\t\t\tif (response.data) {\n\t\t\t\t\t// Load the refresh token\n\t\t\t\t\tresponse.data.refresh_token = refreshToken;\n\n\t\t\t\t\t// Save to LS\n\t\t\t\t\tthis.storageService.set(this.config.accessTokenLsKey, response.data);\n\t\t\t\t}\n\n\t\t\t\t// Creates the access token model\n\t\t\t\tthis.accessToken = this.parseAccessToken(response.data);\n\n\t\t\t\t// Load to apiService to\n\t\t\t\tthis.apiService.setAccessToken(this.accessToken.token);\n\n\t\t\t\t// Restore\n\t\t\t\tthis.apiService.restoreApiResponseStrategy();\n\t\t\t\treturn this.accessToken;\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic loadSession(): Observable<boolean> {\n\t\t// Create an observable\n\t\tconst obs = new Observable<boolean>((observer: any) => {\n\t\t\tconst accessTokenLs: any = this.storageService.get(this.config.accessTokenLsKey);\n\t\t\tconst lastMeAvatar: string = this.storageService.get(this.config.lastMeAvatarLsKey);\n\t\t\tconst lastMeUsername: string = this.storageService.get(this.config.lastMeUsernameLsKey);\n\t\t\tconst completeObservable: Function = (result: boolean) => {\n\t\t\t\tobserver.next(result);\n\t\t\t\tobserver.complete();\n\t\t\t};\n\n\t\t\t// Load last user\n\t\t\tif (lastMeUsername || lastMeUsername) {\n\t\t\t\tthis.lastMe = new NgxGustavguezLastMeModel(\n\t\t\t\t\tlastMeUsername,\n\t\t\t\t\tlastMeAvatar\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.lastMe = null;\n\t\t\t}\n\n\t\t\t// Check access token getted from ls\n\t\t\tif (accessTokenLs) {\n\t\t\t\t// Creat access token\n\t\t\t\tthis.accessToken = this.parseAccessToken(accessTokenLs);\n\n\t\t\t\t// Check token\n\t\t\t\tif (this.accessToken instanceof NgxGustavguezAccessTokenModel) {\n\t\t\t\t\t// Has configured me\n\t\t\t\t\tif (this.config.oauthMeUri) {\n\t\t\t\t\t\t// Load to apiService to\n\t\t\t\t\t\tthis.apiService.setAccessToken(this.accessToken.token);\n\n\t\t\t\t\t\t// Request me info\n\t\t\t\t\t\tthis.requestMe().subscribe(\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t// Notify user state\n\t\t\t\t\t\t\t\tthis.checkAndNotifyMeState();\n\n\t\t\t\t\t\t\t\t// Finish load\n\t\t\t\t\t\t\t\tcompleteObservable(true);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t// Finish load\n\t\t\t\t\t\t\t\tcompleteObservable(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Load success without me\n\t\t\t\t\t\tcompleteObservable(true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Finish load\n\t\t\t\t\tcompleteObservable(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Finish load\n\t\t\t\tcompleteObservable(false);\n\t\t\t}\n\t\t});\n\t\treturn obs;\n\t}\n\n\tpublic logout(): void {\n\t\t// Clear Local storage\n\t\tthis.storageService.remove(this.config.accessTokenLsKey);\n\n\t\t// Clear data in memory\n\t\tthis.me = null;\n\t\tthis.accessToken = null;\n\n\t\t// Emit state change\n\t\tthis.checkAndNotifyMeState();\n\t}\n\n\tpublic checkAndNotifyMeState(): void {\n\t\tif (this.me instanceof NgxGustavguezMeModel && this.accessToken instanceof NgxGustavguezAccessTokenModel) {\n\t\t\t// Emit login event\n\t\t\tthis.onSessionStateChange.emit(true);\n\t\t} else {\n\t\t\t// Emit login event\n\t\t\tthis.onSessionStateChange.emit(false);\n\t\t}\n\t}\n\n\tpublic updateMe(me: NgxGustavguezMeModel): void {\n\t\tthis.me = me;\n\n\t\t// Emit change\n\t\tthis.onMeChanged.emit(me);\n\t}\n\n\t// Private methods\n\tprivate parseAccessToken(json: any): NgxGustavguezAccessTokenModel {\n\t\tlet accessToken: NgxGustavguezAccessTokenModel = null;\n\n\t\t// Check access token\n\t\tif (json && json.access_token) {\n\t\t\t// parse expiration date\n\t\t\tconst expiration: Date = new Date();\n\t\t\tconst expiresIn: number = json.expires_in / 60;\n\t\t\texpiration.setMinutes(expiration.getMinutes() + expiresIn);\n\n\t\t\t// Creates the access token model\n\t\t\taccessToken = new NgxGustavguezAccessTokenModel(\n\t\t\t\tjson.access_token,\n\t\t\t\tjson.refresh_token,\n\t\t\t\texpiration\n\t\t\t);\n\t\t}\n\t\treturn accessToken;\n\t}\n}\n","\nimport { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { NgxGustavguezAuthService } from './ngx-gustavguez-auth.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class NgxGustavguezAuthGuard implements CanActivate {\n\n\tconstructor(\n\t\tprivate ngxGustavguezAuthService: NgxGustavguezAuthService) { }\n\n\tcanActivate(): boolean {\n\t\t// Active user session?\n\t\tif (this.ngxGustavguezAuthService.isLogged()) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Redirect login form\n\t\tthis.ngxGustavguezAuthService.checkAndNotifyMeState();\n\t\treturn false;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport {\n\tHttpEvent,\n\tHttpInterceptor,\n\tHttpHandler,\n\tHttpRequest,\n\tHttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, filter, take, switchMap, finalize } from 'rxjs/operators';\n\nimport { NgxGustavguezAuthService } from './ngx-gustavguez-auth.service';\nimport { NgxGustavguezAccessTokenModel } from './ngx-gustavguez-access-token.model';\n\n@Injectable()\nexport class NgxGustavguezAuthInterceptor implements HttpInterceptor {\n\n\t// Models\n\tprivate isRefreshingToken: boolean = false;\n\tprivate tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n\n\tconstructor(\n\t\tprivate ngxGustavguezAuthService: NgxGustavguezAuthService) { }\n\n\t// Intercep method\n\tpublic intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\t// Pass on the cloned request instead of the original request.\n\t\treturn next.handle(req)\n\t\t\t.pipe(\n\t\t\t\tcatchError((error: any) => {\n\t\t\t\t\t// Check error type\n\t\t\t\t\tif (error instanceof HttpErrorResponse) {\n\t\t\t\t\t\tswitch (error.status) {\n\t\t\t\t\t\tcase 400:\n\t\t\t\t\t\t\treturn this.handle400Error(error);\n\t\t\t\t\t\tcase 401:\n\t\t\t\t\t\t\treturn this.handle401Error(error, req, next);\n\t\t\t\t\t\tcase 403:\n\t\t\t\t\t\t\treturn this.handle403Error(error);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn throwError(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn new Observable<HttpEvent<any>>();\n\t\t\t\t})\n\t\t\t) as any;\n\t}\n\n\t// Add authorization header to requests\n\tprivate addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\n\t\treturn req.clone({\n\t\t\tsetHeaders: {\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\t}\n\n\t// Helper function when the refresh token doesnt work\n\tprivate logout(error: string): Observable<any> {\n\t\t// logout users, redirect to login page\n\t\tthis.ngxGustavguezAuthService.logout();\n\t\treturn throwError(error);\n\t}\n\n\t// Handle 403 error\n\tprivate handle403Error(error: HttpErrorResponse): Observable<any> {\n\t\treturn this.logout(error.message);\n\t}\n\n\t// Hanfle 401 error\n\tprivate handle401Error(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n\t\t// @@TODO: find a way to configure it\n\t\t// Ignore 401 status when the url are Oauth\n\t\tif (req.url.includes('/oauth')) {\n\t\t\treturn throwError(error);\n\t\t}\n\n\t\t// Check if is refreshing token\n\t\tif (!this.isRefreshingToken) {\n\t\t\tthis.isRefreshingToken = true;\n\n\t\t\t// Reset here so that the following requests wait until the token\n\t\t\t// comes back from the refreshToken call.\n\t\t\tthis.tokenSubject.next(null);\n\n\t\t\treturn this.ngxGustavguezAuthService.refreshToken()\n\t\t\t\t.pipe(\n\t\t\t\t\tswitchMap((newToken: NgxGustavguezAccessTokenModel) => {\n\t\t\t\t\t\tif (newToken instanceof NgxGustavguezAccessTokenModel) {\n\t\t\t\t\t\t\tthis.tokenSubject.next(newToken.token);\n\t\t\t\t\t\t\treturn next.handle(this.addToken(req, newToken.token));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If we don't get a new token, we are in trouble so logout.\n\t\t\t\t\t\treturn this.logout('Cant get a new token.');\n\t\t\t\t\t}),\n\t\t\t\t\tcatchError((errorCatched: any) => this.logout(errorCatched.message)),\n\t\t\t\t\tfinalize(() => this.isRefreshingToken = false)\n\t\t\t\t);\n\t\t}\n\n\t\t// Take the token and release requests\n\t\treturn this.tokenSubject\n\t\t\t.pipe(\n\t\t\t\tfilter((token: any) => token !== null),\n\t\t\t\ttake(1),\n\t\t\t\tswitchMap((token: any) => next.handle(this.addToken(req, token)))\n\t\t\t);\n\t}\n\n\t// Handle 400 error\n\tprivate handle400Error(error: HttpErrorResponse): Observable<any> {\n\t\tif (error instanceof HttpErrorResponse\n\t\t\t&& error.status === 400\n\t\t\t&& 'error' in error\n\t\t\t&& error.error.error === 'invalid_grant') {\n\t\t\t// If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\n\t\t\treturn this.logout(error.message);\n\t\t}\n\n\t\t// Normal flow\n\t\treturn throwError(error);\n\t}\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { FormUtility } from 'ngx-gustavguez-core';\nimport { NgxGustavguezAuthService } from '../ngx-gustavguez-auth.service';\nimport { NgxGustavguezLastMeModel } from '../ngx-gustavguez-last-me.model';\n\n@Component({\n\tselector: 'ngx-gustavguez-auth-login',\n\ttemplateUrl: './ngx-gustavguez-auth-login.component.html',\n\tstyleUrls: ['./ngx-gustavguez-auth-login.component.scss']\n})\nexport class NgxGustavguezAuthLoginComponent implements OnInit {\n\t// Inputs\n\t@Input() imageUrl: string;\n\t@Input() usernamePlaceholder: string;\n\t@Input() passwordPlaceholder: string;\n\t@Input() submitText: string;\n\n\t// Outputs\n\t@Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\t@Output() onError: EventEmitter<HttpErrorResponse> = new EventEmitter();\n\n\t// Properties\n\tloading: boolean;\n\tlastAvatar: string;\n\tlastUsername: string;\n\tform: FormGroup;\n\t\n\t// Component constructor\n\tconstructor(\n\t\tprivate ngxGustavguezAuthService: NgxGustavguezAuthService,\n\t\tprivate fb: FormBuilder) { }\n\n\t// Events\n\tngOnInit(): void {\n\t\t// Init loading\n\t\tthis.loading = false;\n\n\t\t// Check last logged avatar\n\t\tif (this.ngxGustavguezAuthService.getLastMe() instanceof NgxGustavguezLastMeModel) {\n\t\t\tconst lastMe: NgxGustavguezLastMeModel = this.ngxGustavguezAuthService.getLastMe();\n\n\t\t\tthis.lastAvatar = this.imageUrl + lastMe.avatar;\n\t\t\tthis.lastUsername = lastMe.username;\n\t\t}\n\n\t\t// Creates the form\n\t\tthis.form = this.fb.group({\n\t\t\tusername: this.fb.control('', [Validators.required]),\n\t\t\tpassword: this.fb.control('', [Validators.required])\n\t\t});\n\n\t\t// Check state\n\t\tif (this.ngxGustavguezAuthService.isLogged()) {\n\t\t\t// Emit success\n\t\t\tthis.onSuccess.emit();\n\t\t\treturn;\n\t\t}\n\n\t\t// Inital clear\n\t\tthis.initForm();\n\t}\n\n\tonSubmit(): void {\n\t\t// Check loading\n\t\tif (this.loading) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check allways form validation\n\t\tif (this.form.valid) {\n\t\t\t// Set loading\n\t\t\tthis.loading = true;\n\n\t\t\t// Submit the form\n\t\t\tthis.ngxGustavguezAuthService\n\t\t\t\t.login(\n\t\t\t\t\tthis.form.value.username,\n\t\t\t\t\tthis.form.value.password\n\t\t\t\t)\n\t\t\t\t.subscribe(\n\t\t\t\t\t(result: boolean) => {\n\t\t\t\t\t\t// Stop loading\n\t\t\t\t\t\tthis.loading = false;\n\n\t\t\t\t\t\t// Check result\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\t// Emit success\n\t\t\t\t\t\t\tthis.onSuccess.emit();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t(error: HttpErrorResponse) => {\n\t\t\t\t\t\t// Stop loading\n\t\t\t\t\t\tthis.loading = false;\n\n\t\t\t\t\t\t// Emit error\n\t\t\t\t\t\tthis.onError.emit(error);\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t} else {\n\t\t\t// Display error\n\t\t\tFormUtility.validateAllFormFields(this.form);\n\t\t}\n\t}\n\n\tonUsernameChange(): void {\n\t\t// Check different\n\t\tif (this.lastUsername !== this.form.value.username) {\n\t\t\tthis.lastAvatar = null;\n\t\t}\n\t}\n\n\tprivate initForm(): void {\n\t\t// Clear form\n\t\tthis.form.reset();\n\n\t\t// Check last username\n\t\tif (this.lastUsername) {\n\t\t\tthis.form.patchValue({\n\t\t\t\tusername: this.lastUsername\n\t\t\t});\n\t\t}\n\n\t\t// Stop loading\n\t\tthis.loading = false;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LocalStorageModule } from 'angular-2-local-storage';\nimport { NgxGustavguezCoreModule } from 'ngx-gustavguez-core';\n\nimport { NgxGustavguezAuthInterceptor } from './ngx-gustavguez-auth.interceptor';\nimport { NgxGustavguezAuthLoginComponent } from './ngx-gustavguez-auth-login/ngx-gustavguez-auth-login.component';\n\n@NgModule({\n\tdeclarations: [NgxGustavguezAuthLoginComponent],\n\timports: [\n\t\tCommonModule,\n\t\tLocalStorageModule,\n\t\tReactiveFormsModule,\n\t\tNgxGustavguezCoreModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\tuseClass: NgxGustavguezAuthInterceptor,\n\t\t\tmulti: true\n\t\t}\n\t],\n\texports: [NgxGustavguezAuthLoginComponent]\n})\nexport class NgxGustavguezAuthModule { }\n"]}